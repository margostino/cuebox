// Code generated by gocode.Generate; DO NOT EDIT.

package main

import (
	"fmt"

	"cuelang.org/go/cue"
	"cuelang.org/go/encoding/gocode/gocodec"
	_ "cuelang.org/go/pkg"
)

var cuegenCodec, cuegenInstance = func() (*gocodec.Codec, *cue.Instance) {
	var r *cue.Runtime
	r = &cue.Runtime{}
	instances, err := r.Unmarshal(cuegenInstanceData)
	if err != nil {
		panic(err)
	}
	if len(instances) != 1 {
		panic("expected encoding of exactly one instance")
	}
	return gocodec.New(r, nil), instances[0]
}()

// cuegenMake is called in the init phase to initialize CUE values for
// validation functions.
func cuegenMake(name string, x interface{}) cue.Value {
	f, err := cuegenInstance.Value().FieldByName(name, true)
	if err != nil {
		panic(fmt.Errorf("could not find type %q in instance", name))
	}
	v := f.Value
	if x != nil {
		w, err := cuegenCodec.ExtractType(x)
		if err != nil {
			panic(err)
		}
		v = v.Unify(w)
	}
	return v
}

// Data size: 198 bytes.
var cuegenInstanceData = []byte("\x01\x1f\x8b\b\x00\x00\x00\x00\x00\x00\xffD\xce1K\xc50\x1c\x04\xf0\xbb4\x82\x94\xa7\xdf@\x88\x99\x9e\x0eop\x11\xde&\x888\x89\xb8\xaaC\xa8\xb1\x06\xd2F\x9a\x88\x8b\x8bZ\xab\xdf\xfa/-\x82\xdb\xf1\x83;nO\xbe\x15\x95\xfc\x80\xf2\x01\x9c\xca{E\xaeB\x9f\x8b\xeb\x1b\u007f\ue29b\x9d\x15\xf5MJ\x85\n\xd4\u05ee<q\x05\xee\\\x84\xe83e\x02p _\x8a\u073f\xbdo^\xfc\xe61\u013f\xe6\x04\xca\b\xac\xe5\xb3\"w\xff}\x04\x15\xf5\x95\xeb\xfc<\xa4\x17\xac\x01\x9c\xcd?HEr\u00d3.\xb7[c\x8c\xbd\xf41&s\xb7~\x8e\xae\xf1G\x87\xb6^\xc2\xd6\xe42\x84\xbe5o\xe6\u063e\xa6!>\xd8\x1a\xf8\r\x00\x00\xff\xff\xd9d\xfdM\xcf\x00\x00\x00")
